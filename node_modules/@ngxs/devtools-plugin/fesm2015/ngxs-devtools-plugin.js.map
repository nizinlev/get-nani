{"version":3,"file":"ngxs-devtools-plugin.js","sources":["ng://@ngxs/devtools-plugin/src/symbols.ts","ng://@ngxs/devtools-plugin/src/devtools.plugin.ts","ng://@ngxs/devtools-plugin/src/devtools.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\n/**\n * Interface for the redux-devtools-extension API.\n */\nexport interface NgxsDevtoolsExtension {\n  init(state: any): void;\n  send(action: any, state?: any): void;\n  subscribe(fn: (message: NgxsDevtoolsAction) => void): VoidFunction;\n}\n\nexport interface NgxsDevtoolsAction {\n  type: string;\n  payload: any;\n  state: any;\n  id: number;\n  source: string;\n}\n\nexport interface NgxsDevtoolsOptions {\n  /**\n   * The name of the extension\n   */\n  name?: string;\n\n  /**\n   * Whether the dev tools is enabled or note. Useful for setting during production.\n   */\n  disabled?: boolean;\n\n  /**\n   * Max number of entiries to keep.\n   */\n  maxAge?: number;\n\n  /**\n   * Reformat actions before sending to dev tools\n   */\n  actionSanitizer?: (action: any) => void;\n\n  /**\n   * Reformat state before sending to devtools\n   */\n  stateSanitizer?: (state: any) => void;\n}\n\nexport const NGXS_DEVTOOLS_OPTIONS = new InjectionToken('NGXS_DEVTOOLS_OPTIONS');\n","import { Inject, Injectable, Injector, NgZone, OnDestroy, Éµglobal } from '@angular/core';\nimport { getActionTypeFromInstance, NgxsNextPluginFn, NgxsPlugin, Store } from '@ngxs/store';\nimport { tap, catchError } from 'rxjs/operators';\n\nimport {\n  NGXS_DEVTOOLS_OPTIONS,\n  NgxsDevtoolsAction,\n  NgxsDevtoolsExtension,\n  NgxsDevtoolsOptions\n} from './symbols';\n\nconst enum ReduxDevtoolsActionType {\n  Dispatch = 'DISPATCH',\n  Action = 'ACTION'\n}\n\nconst enum ReduxDevtoolsPayloadType {\n  JumpToAction = 'JUMP_TO_ACTION',\n  JumpToState = 'JUMP_TO_STATE',\n  ToggleAction = 'TOGGLE_ACTION',\n  ImportState = 'IMPORT_STATE'\n}\n\n/**\n * Adds support for the Redux Devtools extension:\n * http://extension.remotedev.io/\n */\n@Injectable()\nexport class NgxsReduxDevtoolsPlugin implements OnDestroy, NgxsPlugin {\n  private devtoolsExtension: NgxsDevtoolsExtension | null = null;\n  private readonly globalDevtools =\n    Éµglobal['__REDUX_DEVTOOLS_EXTENSION__'] || Éµglobal['devToolsExtension'];\n\n  private unsubscribe: VoidFunction | null = null;\n\n  constructor(\n    @Inject(NGXS_DEVTOOLS_OPTIONS) private _options: NgxsDevtoolsOptions,\n    private _injector: Injector,\n    private _ngZone: NgZone\n  ) {\n    this.connect();\n  }\n\n  ngOnDestroy(): void {\n    if (this.unsubscribe !== null) {\n      this.unsubscribe();\n    }\n    if (this.globalDevtools) {\n      this.globalDevtools.disconnect();\n    }\n  }\n\n  /**\n   * Lazy get the store for circular dependency issues\n   */\n  private get store(): Store {\n    return this._injector.get<Store>(Store);\n  }\n\n  /**\n   * Middleware handle function\n   */\n  handle(state: any, action: any, next: NgxsNextPluginFn) {\n    if (!this.devtoolsExtension || this._options.disabled) {\n      return next(state, action);\n    }\n\n    return next(state, action).pipe(\n      catchError(error => {\n        const newState = this.store.snapshot();\n        this.sendToDevTools(state, action, newState);\n        throw error;\n      }),\n      tap(newState => {\n        this.sendToDevTools(state, action, newState);\n      })\n    );\n  }\n\n  private sendToDevTools(state: any, action: any, newState: any) {\n    const type = getActionTypeFromInstance(action);\n    // if init action, send initial state to dev tools\n    const isInitAction = type === '@@INIT';\n    if (isInitAction) {\n      this.devtoolsExtension!.init(state);\n    } else {\n      this.devtoolsExtension!.send({ ...action, action: null, type }, newState);\n    }\n  }\n\n  /**\n   * Handle the action from the dev tools subscription\n   */\n  dispatched(action: NgxsDevtoolsAction) {\n    if (action.type === ReduxDevtoolsActionType.Dispatch) {\n      if (\n        action.payload.type === ReduxDevtoolsPayloadType.JumpToAction ||\n        action.payload.type === ReduxDevtoolsPayloadType.JumpToState\n      ) {\n        const prevState = JSON.parse(action.state);\n        // This makes the DevTools and Router plugins friends with each other.\n        // We're checking for the `router` state to exist, and it also should\n        // have the `trigger` property, so we're sure that this is our router\n        // state (coming from `@ngxs/router-plugin`). This enables a time-traveling\n        // feature since it doesn't only restore the state but also allows the `RouterState`\n        // to navigate back when the action is jumped.\n        if (prevState.router && prevState.router.trigger) {\n          prevState.router.trigger = 'devtools';\n        }\n        this.store.reset(prevState);\n      } else if (action.payload.type === ReduxDevtoolsPayloadType.ToggleAction) {\n        console.warn('Skip is not supported at this time.');\n      } else if (action.payload.type === ReduxDevtoolsPayloadType.ImportState) {\n        const {\n          actionsById,\n          computedStates,\n          currentStateIndex\n        } = action.payload.nextLiftedState;\n        this.devtoolsExtension!.init(computedStates[0].state);\n        Object.keys(actionsById)\n          .filter(actionId => actionId !== '0')\n          .forEach(actionId =>\n            this.devtoolsExtension!.send(actionsById[actionId], computedStates[actionId].state)\n          );\n        this.store.reset(computedStates[currentStateIndex].state);\n      }\n    } else if (action.type === ReduxDevtoolsActionType.Action) {\n      const actionPayload = JSON.parse(action.payload);\n      this.store.dispatch(actionPayload);\n    }\n  }\n\n  private connect(): void {\n    if (!this.globalDevtools || this._options.disabled) {\n      return;\n    }\n\n    // The `connect` method adds `message` event listener since it communicates\n    // with an extension through `window.postMessage` and message events.\n    // We handle only 2 events; thus, we don't want to run many change detections\n    // because the extension sends events that we don't have to handle.\n    this.devtoolsExtension = this._ngZone.runOutsideAngular(\n      () => <NgxsDevtoolsExtension>this.globalDevtools.connect(this._options)\n    );\n\n    this.unsubscribe = this.devtoolsExtension.subscribe(action => {\n      if (\n        action.type === ReduxDevtoolsActionType.Dispatch ||\n        action.type === ReduxDevtoolsActionType.Action\n      ) {\n        this._ngZone.run(() => {\n          this.dispatched(action);\n        });\n      }\n    });\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { NGXS_PLUGINS } from '@ngxs/store';\n\nimport { NgxsDevtoolsOptions, NGXS_DEVTOOLS_OPTIONS } from './symbols';\nimport { NgxsReduxDevtoolsPlugin } from './devtools.plugin';\n\nexport function devtoolsOptionsFactory(options: NgxsDevtoolsOptions) {\n  return {\n    name: 'NGXS',\n    ...options\n  };\n}\n\nexport const USER_OPTIONS = new InjectionToken('USER_OPTIONS');\n\n@NgModule()\nexport class NgxsReduxDevtoolsPluginModule {\n  static forRoot(\n    options?: NgxsDevtoolsOptions\n  ): ModuleWithProviders<NgxsReduxDevtoolsPluginModule> {\n    return {\n      ngModule: NgxsReduxDevtoolsPluginModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: NgxsReduxDevtoolsPlugin,\n          multi: true\n        },\n        {\n          provide: USER_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: NGXS_DEVTOOLS_OPTIONS,\n          useFactory: devtoolsOptionsFactory,\n          deps: [USER_OPTIONS]\n        }\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}